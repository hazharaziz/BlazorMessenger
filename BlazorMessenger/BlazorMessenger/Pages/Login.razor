@layout AuthenticationLayout
@page "/"
@page "/login"
@inject NavigationManager Navigator
@inject IAuthenticationAPI API
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage
@inject IJSRuntime JsRuntime
@inject IUnitOfWork UnitOfWork

<h3>Login</h3>
<EditForm Model="@user" OnValidSubmit="@ValidatUser">
    <div>
        <input type="text" @bind="@user.Username" id="username-input" />
        <label for="username-input">Username</label>
    </div>

    <div>
        <input type="password" @ref="@passwordInput" @bind="@user.Password" id="password-input" />
        <label for="password-input">Password</label>
    </div>

    <div>
        <input type="checkbox" @onclick="(() => TogglePassword())" id="toggle-password-checkbox" />
        <label for="toggle-password-checkbox">Show Password</label>
    </div>

    <input type="submit" value="Login" />
    <a href="/signup">Sign up</a>
</EditForm>


@code {

    private ElementReference passwordInput;
    private User user;

    protected override Task OnInitializedAsync()
    {
        user = new User();
        return base.OnInitializedAsync();
    }

    private async Task<bool> ValidatUser()
    {
        try
        {
            API.LoginUser(user);
            Navigator.NavigateTo("/home");
            await SessionStorage.SetItemAsync("username", user.Username);
            return await Task.FromResult(true);
        }
        catch
        {
            return await Task.FromResult(false);
        }

    }

    public async void TogglePassword()
    {
        await JsRuntime.InvokeVoidAsync("togglePassword", passwordInput);
    }
}
